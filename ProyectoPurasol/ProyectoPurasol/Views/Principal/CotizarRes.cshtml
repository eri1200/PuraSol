@model ProyectoPurasol.Models.Principal

@{
    ViewBag.Title = "Tarifa Residencial";
}




@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-danger alert-dismissable">
        <strong>@TempData["SuccessMessage"]</strong>
    </div>
}
@if (ViewBag.Error != null)
{
<h3 style="color:red">@ViewBag.Error</h3>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



<div class="panel panel-primary">
    <div class="panel-body ">
        <div class="modal-footer">
            <div class="form-group">
                <div class="form-horizontal">

                    <div class="form-group">
                        <div class="form-horizontal">
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                                Seleccionar Cliente
                            </button>

                            <!-- Modal -->
                            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                @Html.Label("Identificacion", htmlAttributes: new { @class = "control-label col-md-2", @id = "Identificacion" })
                                                <div class="col-md-6">
                                                    <input class="form-control" type="text" name="IdCliente" id="IdCliente" />
                                                    <br />
                                                    <input class="btn btn-primary" type="button" name="Buscar" id="Buscar" value="Buscar Cliente" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                                        </div>
                                        <script>
                                        $(document).ready(function () {
                                            try {
                                                $("#Buscar").click(function () {

                                                    if ((document.getElementById("IdCliente").value != "" && !isNaN(parseInt(document.getElementById("IdCliente").value)))) {
                                                    @*$.post('@Url.Action("ConsultarCliente", "Cliente")', { id: document.getElementById("IdCliente").value })
                                                        .done(function (resultado) {
                                                            $("#Nombre").val(resultado[0].Nombre);
                                                            $("#Apellido1").val(resultado[0].Apellido);
                                                            $("#Apellido2").val(resultado[0].Correo);
                                                        }).fail(function () {
                                                            alert("Información No Encontrada");
                                                        });*@
                                                    $.ajax({
                                                        type: 'POST',
                                                        url: '@Url.Action("ConsultarCliente", "Cliente")',
                                                        contentType: "application/json; charset=utf-8",
                                                        dataType: 'json',
                                                        data: JSON.stringify({ id: document.getElementById("IdCliente").value }),
                                                        success: function (resultado) {
                                                            if (resultado.success) {

                                                                $("#Cliente").val(resultado.resul[0].Nombre);
                                                                $("#ID").val(document.getElementById("IdCliente").value);
                                                                alert("SE AGREGÓ CORRECTAMENTE");
                                                            } else {
                                                                $("#Cliente").val("");
                                                                alert("ERROR BUSCANDO EL CLIENTE");
                                                            }

                                                        },
                                                        error: function (ex) {
                                                            $("#Cliente").val("");
                                                            alert('Hubo un error cargando los datos ' + ex);
                                                        }
                                                    })
                                                } else {
                                                    alert("INFORMACIÓN INCORRECTA");
                                                }
                                            });
                                            }
                                            catch (err) {
                                                alert("Hubo un error",err);
                                            }


                                            });


                                        </script>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "Cliente" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "ID" } })
                            @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        if (ViewBag.Compania == null)
                        {
                            ViewBag.Compania = new List<string> { "COOPEALFARORUIZ", "COOPESANTOS", "COOPEGUANACASTE", "COOPELESCA", "ESPH", "JASEC", "CNFL", "ICE" };
                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Compania, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Compania, new SelectList(ViewBag.Compania), "--Compañías--", new { @class = "form-control", style = "font-size: 1.3em; font-weight:700;" })
                            @Html.ValidationMessageFor(model => model.Compania, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        if (ViewBag.Tarifa == null)
                        {
                            ViewBag.Tarifa = new List<string> { "T-RE", "T-CO/IN", "T-CS" };
                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Tarifa, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Tarifa, new SelectList(ViewBag.Tarifa), "--Tipo de Tarifa--", new { @class = "form-control", style = "font-size: 1.3em; font-weight:700;" })
                            @Html.ValidationMessageFor(model => model.Tarifa, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TechoDisponible, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TechoDisponible, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TechoDisponible, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HorasRespaldo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HorasRespaldo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HorasRespaldo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoCambio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TipoCambio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TipoCambio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PotenciaPanel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PotenciaPanel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PotenciaPanel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*@{
                            if (ViewBag.Bool == null)
                            {
                                ViewBag.Bool = new List<string> { "Sí", "No" };
                            }
                        }*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.CostoUnitarioFijo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CostoUnitarioFijo, new SelectList(ViewBag.Bool, "Text", "Value"), "--Seleccionar--", new { @class = "form-control", style = "font-size: 1.3em; font-weight:700;" })
                            @Html.ValidationMessageFor(model => model.CostoUnitarioFijo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CostoUnitarioFijoValor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CostoUnitarioFijoValor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CostoUnitarioFijoValor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TamanoFijo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.TamanoFijo, new SelectList(ViewBag.Bool, "Text", "Value"), "--Seleccionar--", new { @class = "form-control", style = "font-size: 1.3em; font-weight:700;" })
                            @Html.ValidationMessageFor(model => model.TamanoFijo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TamanoFijoValor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TamanoFijoValor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TamanoFijoValor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        if (ViewBag.Mant == null)
                        {
                            ViewBag.Mant = new List<string> { "No", "GAM", "GAM+100km", "GAM + 250km", "GAM+350km" };
                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.CostoMantenimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CostoMantenimiento, new SelectList(ViewBag.Mant), "--Seleccionar--", new { @class = "form-control", style = "font-size: 1.3em; font-weight:700;" })
                            @Html.ValidationMessageFor(model => model.CostoMantenimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CrecimientoAnual, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CrecimientoAnual, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CrecimientoAnual, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        if (ViewBag.Tec == null)
                        {
                            ViewBag.Tec = new List<string> { "Microinversor", "Optimizadores", "Centralizado", "Acople DC", "Acople AC" };
                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Tecnologia, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Tecnologia, new SelectList(ViewBag.Tec), "--Seleccionar--", new { @class = "form-control", style = "font-size: 1.3em; font-weight:700;" })
                            @Html.ValidationMessageFor(model => model.Tecnologia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                    @Html.AntiForgeryToken()

<div class="panel panel-primary">
    <div class="panel-body ">
        <div class="modal-footer">
            <div class="form-group">
                <div class="form-horizontal">
                    <h4>Consumo de Meses</h4>
                    <h5>Facturas eléctricas </h5>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PREne, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PREne, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PREne, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRFeb, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRFeb, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRFeb, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRMar, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRMar, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRMar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRAbr, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRAbr, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRAbr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRMay, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRMay, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRMay, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRJun, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRJun, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRJun, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRJul, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRJul, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRJul, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRAgo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRAgo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRAgo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRSep, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRSep, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRSep, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PROct, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PROct, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PROct, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRNov, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRNov, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRNov, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PRDic, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PRDic, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PRDic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="panel panel-primary">
    <div class="panel-body ">
        <div class="modal-footer">
            <div class="form-group">
                <div class="form-horizontal">
                    <h4>Consumo de Meses SolarGIS</h4>


                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISEne, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISEne, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISEne, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISFeb, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISFeb, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISFeb, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISMar, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISMar, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISMar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISAbr, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISAbr, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISAbr, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISMay, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISMay, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISMay, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISJun, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISJun, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISJun, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISJul, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISJul, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISJul, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISAgo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISAgo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISAgo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISSep, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISSep, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISSep, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISOct, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISOct, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISOct, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISNov, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISNov, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISNov, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RSGISDic, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RSGISDic, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RSGISDic, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                    }

                    <div>
                        @Html.ActionLink("Devolverse al Inicio", "Index")
                    </div>

